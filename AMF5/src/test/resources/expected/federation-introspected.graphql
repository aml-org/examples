type Query {
    _entities(representations: [_Any!]!): [_Entity]!
    _service: _Service
}

type Romagnoli {
    id: ID!
    name: String!
    goals: Int!
}

type Dog @key(fields: "name") {
    id: ID!
    name: String
}

type Cat @key(fields: "name") {
    id: ID!
    name: String
}

scalar _Any
scalar FieldSet
type _Service {
    sdl: String
}

union _Entity = Dog | Cat
directive @external on FIELD_DEFINITION
directive @requires(fields: FieldSet!) on FIELD_DEFINITION
directive @provides(fields: FieldSet!) on FIELD_DEFINITION
directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE
directive @shareable on OBJECT | FIELD_DEFINITION
directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION
directive @override(from: String!) on FIELD_DEFINITION